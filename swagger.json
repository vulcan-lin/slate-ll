{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Welcome to the CyberMem  API! You can use our API to access CyberMem  API endpoints.",
        "title": "CyberMem API",
        "contact": {},
        "version": "v1"
    },
    "host": "api.dev.cybermem.com",
    "basePath": "/api/v1",
    "paths": {
        "/chats": {
            "post": {
                "description": "new chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "chat new request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatNewReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chat context id",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/chats/qa": {
            "post": {
                "description": "chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "chat request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/chats/stream-qa": {
            "post": {
                "description": "stream chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "chat request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/chats/{context_id}": {
            "get": {
                "description": "get chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "chat context id",
                        "name": "context_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chat",
                        "schema": {
                            "$ref": "#/definitions/api_service.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/domains/{domain_id}": {
            "patch": {
                "description": "update domain site name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domain"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "domain id",
                        "name": "domain_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "new site name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/domains/{domain_id}/users": {
            "get": {
                "description": "domain user list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domain"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "domain id",
                        "name": "domain_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "domain list response",
                        "schema": {
                            "$ref": "#/definitions/DomainUserListResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "user register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domain"
                ],
                "parameters": [
                    {
                        "description": "domain user register",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserRegisterReq"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "domain id",
                        "name": "domain_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/domains/{domain_id}/users/login": {
            "post": {
                "description": "domain user login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domain"
                ],
                "parameters": [
                    {
                        "description": "login with email and password",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginReq"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "domain id",
                        "name": "domain_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login response",
                        "schema": {
                            "$ref": "#/definitions/api_service.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/files": {
            "post": {
                "description": "upload file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Robot"
                ],
                "responses": {
                    "200": {
                        "description": "UploadFileResp response",
                        "schema": {
                            "$ref": "#/definitions/UploadFileResp"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/files/{fid}": {
            "post": {
                "description": "delete file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Robot"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "file id",
                        "name": "fid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/robots": {
            "get": {
                "description": "robot list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Robot"
                ],
                "responses": {
                    "200": {
                        "description": "RobotListResponse response",
                        "schema": {
                            "$ref": "#/definitions/api_service.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "create robot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Robot"
                ],
                "parameters": [
                    {
                        "description": "user register",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RobotCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/robots/{robot_id}": {
            "get": {
                "description": "query Robot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Robot"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "robot id",
                        "name": "robot_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Robot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Robot"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "robot id",
                        "name": "robot_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "create robot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Robot"
                ],
                "parameters": [
                    {
                        "description": "update robot",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RobotCreateReq"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "robot id",
                        "name": "robot_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/robots/{robot_id}/config": {
            "patch": {
                "description": "update robot config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Robot"
                ],
                "parameters": [
                    {
                        "description": "update robot config",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RobotConfigReq"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "robot id",
                        "name": "robot_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/s/chats": {
            "post": {
                "description": "无认证 匿名 new chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "parameters": [
                    {
                        "description": "chat new request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatShareNewReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chat context id",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/s/chats/qa": {
            "post": {
                "description": "无认证 anonymous chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "chat request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/s/chats/stream-qa": {
            "post": {
                "description": "无认证匿名 stream chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "parameters": [
                    {
                        "description": "chat request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "user login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "login with email and password",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login response",
                        "schema": {
                            "$ref": "#/definitions/api_service.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "user register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "description": "user register",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserRegisterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "user list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Login response",
                        "schema": {
                            "$ref": "#/definitions/api_service.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "description": "get info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Login response",
                        "schema": {
                            "$ref": "#/definitions/api_service.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        },
        "/wx/{domain_id}/auth": {
            "post": {
                "description": "get openid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WeChat"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "wechat code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ResponseCode2Session response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    },
                    "400": {
                        "description": "Common response",
                        "schema": {
                            "$ref": "#/definitions/commonResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ChatNewReq": {
            "type": "object",
            "required": [
                "robot_id"
            ],
            "properties": {
                "robot_id": {
                    "type": "integer"
                }
            }
        },
        "ChatReq": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "context_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "ChatShareNewReq": {
            "type": "object",
            "required": [
                "robot_uuid"
            ],
            "properties": {
                "robot_uuid": {
                    "type": "string"
                }
            }
        },
        "DomainUserListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.DomainUser"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "LoginReq": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "用户email地址",
                    "type": "string"
                },
                "password": {
                    "description": "用户密码",
                    "type": "string"
                }
            }
        },
        "LoginResp": {
            "type": "object",
            "properties": {
                "domain": {
                    "description": "关联的domain信息",
                    "$ref": "#/definitions/ent.Domain"
                },
                "email": {
                    "description": "用户email地址",
                    "type": "string"
                },
                "nick_name": {
                    "description": "用户昵称",
                    "type": "string"
                },
                "token": {
                    "description": "用户token",
                    "type": "string"
                }
            }
        },
        "RobotConfigReq": {
            "type": "object",
            "properties": {
                "openai_config": {
                    "$ref": "#/definitions/schema.OpenAIConfig"
                },
                "openai_content": {
                    "$ref": "#/definitions/schema.OpenAIContent"
                },
                "welcome_messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.WelcomeMessage"
                    }
                }
            }
        },
        "RobotCreateReq": {
            "type": "object",
            "required": [
                "description",
                "files",
                "name",
                "prompt"
            ],
            "properties": {
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "files": {
                    "description": "files",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "prompt": {
                    "description": "prompt",
                    "type": "string"
                }
            }
        },
        "UploadFileResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "UserRegisterReq": {
            "type": "object",
            "required": [
                "email",
                "nick_name",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "用户email地址",
                    "type": "string"
                },
                "nick_name": {
                    "description": "用户nick_named",
                    "type": "string"
                },
                "password": {
                    "description": "用户密码",
                    "type": "string"
                }
            }
        },
        "api_service.LoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/ent.Chat"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "commonResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "ent.Chat": {
            "type": "object",
            "properties": {
                "context_id": {
                    "description": "ContextID holds the value of the \"context_id\" field.",
                    "type": "string"
                },
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "messages": {
                    "description": "Messages holds the value of the \"messages\" field.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Message"
                    }
                },
                "robot_id": {
                    "description": "RobotID holds the value of the \"robot_id\" field.",
                    "type": "integer"
                },
                "updated_at": {
                    "description": "UpdatedAt holds the value of the \"updated_at\" field.",
                    "type": "string"
                }
            }
        },
        "ent.Domain": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "domain_id": {
                    "description": "DomainID holds the value of the \"domain_id\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DomainQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.DomainEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "updated_at": {
                    "description": "UpdatedAt holds the value of the \"updated_at\" field.",
                    "type": "string"
                }
            }
        },
        "ent.DomainEdges": {
            "type": "object",
            "properties": {
                "owner": {
                    "description": "Owner holds the value of the owner edge.",
                    "$ref": "#/definitions/ent.User"
                },
                "users": {
                    "description": "Users holds the value of the users edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.DomainUser"
                    }
                }
            }
        },
        "ent.DomainUser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DomainUserQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.DomainUserEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "nickname": {
                    "description": "Nickname holds the value of the \"nickname\" field.",
                    "type": "string"
                },
                "openid": {
                    "description": "Openid holds the value of the \"openid\" field.",
                    "type": "string"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                },
                "unionid": {
                    "description": "Unionid holds the value of the \"unionid\" field.",
                    "type": "string"
                },
                "updated_at": {
                    "description": "UpdatedAt holds the value of the \"updated_at\" field.",
                    "type": "string"
                },
                "user_type": {
                    "description": "UserType holds the value of the \"user_type\" field.",
                    "type": "string"
                }
            }
        },
        "ent.DomainUserEdges": {
            "type": "object",
            "properties": {
                "owner": {
                    "description": "Owner holds the value of the owner edge.",
                    "$ref": "#/definitions/ent.Domain"
                }
            }
        },
        "ent.File": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FileQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.FileEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "status": {
                    "description": "Status holds the value of the \"status\" field.",
                    "type": "string"
                },
                "updated_at": {
                    "description": "UpdatedAt holds the value of the \"updated_at\" field.",
                    "type": "string"
                }
            }
        },
        "ent.FileEdges": {
            "type": "object",
            "properties": {
                "owner": {
                    "description": "Owner holds the value of the owner edge.",
                    "$ref": "#/definitions/ent.Robot"
                }
            }
        },
        "ent.Robot": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "description": {
                    "description": "Description holds the value of the \"description\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RobotQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.RobotEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "prompt": {
                    "description": "Prompt holds the value of the \"prompt\" field.",
                    "type": "string"
                },
                "share": {
                    "description": "Share holds the value of the \"share\" field.",
                    "type": "string"
                },
                "updated_at": {
                    "description": "UpdatedAt holds the value of the \"updated_at\" field.",
                    "type": "string"
                }
            }
        },
        "ent.RobotConfig": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RobotConfigQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.RobotConfigEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "openai_config": {
                    "description": "OpenaiConfig holds the value of the \"openai_config\" field.",
                    "$ref": "#/definitions/schema.OpenAIConfig"
                },
                "openai_content": {
                    "description": "OpenaiContent holds the value of the \"openai_content\" field.",
                    "$ref": "#/definitions/schema.OpenAIContent"
                },
                "updated_at": {
                    "description": "UpdatedAt holds the value of the \"updated_at\" field.",
                    "type": "string"
                },
                "welcome": {
                    "description": "Welcome holds the value of the \"welcome\" field.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.WelcomeMessage"
                    }
                }
            }
        },
        "ent.RobotConfigEdges": {
            "type": "object",
            "properties": {
                "owner": {
                    "description": "Owner holds the value of the owner edge.",
                    "$ref": "#/definitions/ent.Robot"
                }
            }
        },
        "ent.RobotEdges": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "Config holds the value of the config edge.",
                    "$ref": "#/definitions/ent.RobotConfig"
                },
                "files": {
                    "description": "Files holds the value of the files edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.File"
                    }
                },
                "owner": {
                    "description": "Owner holds the value of the owner edge.",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the UserQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.UserEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "nickname": {
                    "description": "Nickname holds the value of the \"nickname\" field.",
                    "type": "string"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                },
                "updated_at": {
                    "description": "UpdatedAt holds the value of the \"updated_at\" field.",
                    "type": "string"
                }
            }
        },
        "ent.UserEdges": {
            "type": "object",
            "properties": {
                "domain": {
                    "description": "Domain holds the value of the domain edge.",
                    "$ref": "#/definitions/ent.Domain"
                },
                "robots": {
                    "description": "Robots holds the value of the robots edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Robot"
                    }
                }
            }
        },
        "schema.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "schema.OpenAIConfig": {
            "type": "object",
            "properties": {
                "model": {
                    "type": "string"
                }
            }
        },
        "schema.OpenAIContent": {
            "type": "object",
            "properties": {
                "index_name": {
                    "type": "string"
                },
                "index_namespace": {
                    "type": "string"
                }
            }
        },
        "schema.WelcomeMessage": {
            "type": "object",
            "properties": {
                "ai": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}